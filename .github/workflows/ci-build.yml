name: build

on:
  push:
    branches:
    tags:
  pull_request:


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Debug if needed
      run: |
        export DEBUG=${DEBUG:-false}
        if [[ "$DEBUG" == "true" ]]; then
          env
        fi
      env:
        DEBUG: ${{secrets.DEBUG}}

    - name: install go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13

    - name: build and test backend
      run: |
        cd backend/app
        go test -timeout=60s -covermode=count -coverprofile=/profile.cov_tmp ./...
        cat /profile.cov_tmp | grep -v "_mock.go" > /profile.cov

    - name: install golangci-lint and goveralls
      run: |
        curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b /usr/local/bin v1.20.0
        go get github.com/mattn/goveralls

    - name: run backend linters
      run: |
        /usr/local/bin/golangci-lint run --out-format=tab --disable-all --tests=false --enable=unconvert \
          --enable=megacheck --enable=structcheck --enable=gas --enable=gocyclo --enable=dupl --enable=misspell \
          --enable=unparam --enable=varcheck --enable=deadcode --enable=typecheck \
          --enable=ineffassign --enable=varcheck ./... ;
        goveralls -coverprofile=/profile.cov -service=github -repotoken $COVERALLS_TOKEN
      env:
        COVERALLS_TOKEN: ${{secrets.COVERALLS_TOKEN}}

    - name: Build docker image
      run: docker build --build-arg SKIP_BACKEND_TEST=true --build-arg CI=github .
